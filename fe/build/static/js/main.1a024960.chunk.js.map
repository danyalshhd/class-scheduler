{"version":3,"sources":["App.js","index.js"],"names":["App","useState","registrationStatus","setRegistrationStatus","fileIncorrectName","setFileIncorrectName","registrationStats","setRegistrationStats","loading","isLoading","upload","event","a","preventDefault","files","document","getElementById","formData","FormData","append","name","indexOf","config","headers","axios","post","result","get","stats","data","class","id","onSubmit","for","type","multiple","disabled","length","map","rs","status","LineChart","width","height","margin","top","right","left","bottom","XAxis","dataKey","YAxis","Line","ReactDOM","render"],"mappings":"wQAsFeA,EA7EH,WAEV,MAAoDC,mBAAS,IAA7D,mBAAOC,EAAP,KAA2BC,EAA3B,KACA,EAAkDF,mBAAS,IAA3D,mBAAOG,EAAP,KAA0BC,EAA1B,KACA,EAAkDJ,mBAAS,IAA3D,mBAAOK,EAAP,KAA0BC,EAA1B,KACA,EAA6BN,oBAAS,GAAtC,mBAAOO,EAAP,KAAgBC,EAAhB,KAEMC,EAAM,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,yDACbP,EAAqB,IACrBM,EAAME,iBACAC,EAAQC,SAASC,eAAe,UAChCC,EAAW,IAAIC,UACZC,OAAO,YAAaL,EAAMA,MAAM,KAEG,GAAxCA,EAAMA,MAAM,GAAGM,KAAKC,QAAQ,QAPnB,uBAQXhB,EAAqB,8BARV,iCAYPiB,EAAS,CAAEC,QAAS,CAAE,eAAgB,wBAE5Cd,GAAU,GAdG,UAeQe,IAAMC,KAAK,6DAA8DR,EAAUK,GAf3F,eAePI,EAfO,iBAgBOF,IAAMG,IAAI,oEAhBjB,QAgBPC,EAhBO,OAiBbnB,GAAU,GAEVF,EAAqBqB,EAAMC,MAC3B1B,EAAsBuB,EAAOG,KAAK3B,oBApBrB,4CAAH,sDAuBZ,OACE,sBAAK4B,MAAM,YAAX,UACI,+EACA,uBAAMC,GAAG,OAAOC,SAAUtB,EAA1B,UACI,sBAAKoB,MAAM,cAAX,UACI,uBAAOG,IAAI,QAAX,6BADJ,IAC+C,uBAC3C,uBAAOF,GAAG,QAAQG,KAAK,OAAOC,UAAQ,OAE1C,uBACA,wBAAQC,SAAU5B,EAASsB,MAAM,aAAaI,KAAK,SAAnD,oBAA2E,0BAE/E,uBAEC9B,EAEAF,EAAmBmC,OAAS,GAC3B,kCACE,+BACE,iDACA,wDAEDnC,EAAmBoC,KAAI,SAAAC,GAAE,OACxB,+BACE,6BACGA,EAAGR,KAEN,6BACGQ,EAAGC,kBAOd,uBACA,uBACA,wDACA,eAACC,EAAA,EAAD,CAAWC,MAAO,IAAKC,OAAQ,IAAKd,KAAMvB,EACxCsC,OAAQ,CAAEC,IAAK,EAAGC,MAAO,GAAIC,KAAM,GAAIC,OAAQ,GADjD,UAEE,cAACC,EAAA,EAAD,CAAOC,QAAQ,SACf,cAACC,EAAA,EAAD,IACA,cAACC,EAAA,EAAD,CAAMF,QAAQ,iB,OC1ExBG,IAASC,OACL,cAAC,EAAD,IACFvC,SAASC,eAAe,W","file":"static/js/main.1a024960.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport axios from 'axios';\nimport  {\n  LineChart,\n  YAxis,\n  XAxis,\n  Line\n} from 'recharts';\n\nconst App = () => {\n\n  const [registrationStatus, setRegistrationStatus] = useState([])\n  const [fileIncorrectName, setFileIncorrectName] = useState('')\n  const [registrationStats, setRegistrationStats] = useState([]);\n  const [loading, isLoading] = useState(false)\n\n  const upload = async (event) => {\n    setFileIncorrectName('');\n    event.preventDefault()\n    const files = document.getElementById('files');\n    const formData = new FormData();\n    formData.append(\"uploadcsv\", files.files[0]);\n    \n    if (files.files[0].name.indexOf('.csv') == -1) {\n      setFileIncorrectName('Incorrect Type, choose CSV')\n      return;\n    }\n    \n    const config = { headers: { 'Content-Type': 'multipart/form-data' } };\n    \n    isLoading(true)\n    const result = await axios.post(\"https://excellence-driving.herokuapp.com/v1/registerations\", formData, config)\n    const stats = await axios.get(\"https://excellence-driving.herokuapp.com/v1/registerations/stats\")\n    isLoading(false)\n    \n    setRegistrationStats(stats.data);\n    setRegistrationStatus(result.data.registrationStatus)\n  }\n\n  return (\n    <div class=\"container\">\n        <h3>Please upload class schedule by uploading csv</h3>\n        <form id='form' onSubmit={upload}>\n            <div class=\"input-group\">\n                <label for=\"files\">Select CSV file</label> <br />\n                <input id=\"files\" type=\"file\" multiple/>\n            </div>\n            <br />\n            <button disabled={loading} class=\"submit-btn\" type='submit'>Upload</button><br/>\n        </form>\n        <br />\n        \n        {fileIncorrectName}        \n        \n        {registrationStatus.length > 0 &&\n          <table>\n            <tr>\n              <th>Registration ID</th>\n              <th>Registration Status</th>\n            </tr>\n            {registrationStatus.map(rs =>\n              <tr>\n                <td>\n                  {rs.id}\n                </td>\n                <td>\n                  {rs.status}\n                </td>\n              </tr>\n            \n            )}\n          </table>\n        }\n        <br />\n        <br />\n        <h3>Class Schedule Per Day</h3>\n        <LineChart width={730} height={250} data={registrationStats}\n          margin={{ top: 5, right: 30, left: 20, bottom: 5 }}>\n          <XAxis dataKey=\"name\" />\n          <YAxis />\n          <Line dataKey=\"value\" />\n        </LineChart>\n    </div>\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport App from './App'\nimport './index.css';\n\nReactDOM.render (\n    <App />,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}